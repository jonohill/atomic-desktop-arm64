---
# ba0fde3d-bee7-4307-b97b-17d0d20aff50
name: Reusable Build
on:
  workflow_call:
    inputs:
      variant:
        required: true
        type: string
      containerfile:
        required: true
        type: string
      image_name:
        required: true
        type: string
      previous_image:
        required: true
        type: string
      platforms:
        required: true
        type: string
      image_path:
        required: true
        type: string
      registry:
        required: true
        type: string
      registry_user:
        required: true
        type: string
      update_origin_ref:
        required: true
        type: string
      update_is_signed:
        required: true
        type: boolean
      config_file:
        required: true
        type: string
      latest_tag:
        required: false
        type: string
    outputs:
      version:
        value: ${{ jobs.build-image.outputs.version }}
    secrets:
      REGISTRY_TOKEN:
        required: true
      SIGNING_SECRET:
        required: false

jobs:
  check-update:
    name: Check for updates
    if: github.event_name == 'schedule'
    runs-on: ubuntu-24.04-arm
    outputs:
      res: ${{ steps.check-update.outputs.res }}
    steps:
      - name: Log in to registry
        shell: bash
        run: podman login ${{ inputs.registry }} -u ${{ inputs.registry_user }} -p ${{ secrets.REGISTRY_TOKEN }}

      - name: Check update
        id: check-update
        shell: bash
        run: |
          # 'dnf check-update'
          # exit codes:
          #   0 - no updates
          #   100 - updates available
          #   125 - tag/platform not found
          #   127 - command not found
          res=0
          podman run --quiet --rm ${{ inputs.previous_image }} dnf check-update || res=$?
          echo "res=${res}" >> "$GITHUB_OUTPUT"
          echo "Exit code: '$res'"

  build-image:
    name: Build image
    needs: [check-update]
    if: ${{ !failure() && !cancelled() && (github.event_name != 'schedule' || needs.check-update.outputs.res != 0) }}
    uses: AlmaLinux/atomic-ci/.github/workflows/build-image.yml@v7
    with:
      containerfile: ${{ inputs.containerfile }}
      image-name: ${{ inputs.image_name }}
      previous-image: ${{ inputs.previous_image }}
      upstream-public-key: almalinux-bootc.pub
      variant: ${{ inputs.variant }}
      platforms: ${{ inputs.platforms }}
      skip-maximize-build-space: true
      image-path: ${{ inputs.image_path }}
      REGISTRY: ${{ inputs.registry }}
      REGISTRY_USER: ${{ inputs.registry_user }}
      image-description: "AlmaLinux Atomic Desktop - ${{ inputs.variant }}"
      changelog-snippet: |
        Major Components:
            - Kernel: <relver:kernel>
            - Systemd: <relver:systemd>
            - Glibc: <relver:glibc>
            - Bootc: <relver:bootc>
            - ${{ inputs.variant == 'gnome' && 'GNOME: <version:gdm>' || 'KDE: <version:plasma-desktop>' }}:
      generate-sbom: false
    secrets:
      REGISTRY_TOKEN: ${{ secrets.REGISTRY_TOKEN }}
      SIGNING_SECRET: ${{ secrets.SIGNING_SECRET }}
    permissions:
      contents: read
      packages: write
      id-token: write

  test-image:
    name: Test image
    needs: [check-update, build-image]
    if: ${{ !failure() && !cancelled() && needs.build-image.result == 'success' && (github.event_name != 'schedule' || needs.check-update.outputs.res != 0) }}
    runs-on: ubuntu-latest
    env:
      IMAGE_REF: "${{ needs.build-image.outputs.image-ref }}@${{ needs.build-image.outputs.digest }}"
    steps:
      - name: Login to Container Registry
        run: echo ${{ secrets.REGISTRY_TOKEN }} | podman login -u ${{ inputs.registry_user }} --password-stdin ${{ inputs.registry }}
      - name: Test container
        run: |
          cat << 'EOF' > /tmp/test.sh
          set -ex
          cat /etc/os-release
          bootc -V
          EOF
          podman run --rm \
            -v /tmp/test.sh:/tmp/test.sh \
            ${{ env.IMAGE_REF }} \
            /bin/bash /tmp/test.sh

  promote-image:
    name: Promote image
    needs: [check-update, build-image, test-image]
    if: ${{ !failure() && !cancelled() && needs.test-image.result == 'success' && github.ref == format('refs/heads/{0}', github.event.repository.default_branch) && (github.event_name != 'schedule' || needs.check-update.outputs.res != 0) }}
    uses: AlmaLinux/atomic-ci/.github/workflows/retag-image.yml@v7
    with:
      image: ${{ needs.build-image.outputs.image-ref }}
      digest: ${{ needs.build-image.outputs.digest }}
      tag: |
        ${{ inputs.latest_tag }}
        ${{ needs.build-image.outputs.major-version }}
        ${{ needs.build-image.outputs.redhat-version-id }}
        ${{ needs.build-image.outputs.version }}
      REGISTRY: ${{ inputs.registry }}
      REGISTRY_USER: ${{ inputs.registry_user }}
    secrets:
      REGISTRY_TOKEN: ${{ secrets.REGISTRY_TOKEN }}
    permissions:
      packages: write
